// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

package dk.dsrhorsens.volunteers.proto.event;

/**
 * Protobuf type {@code dsr.event.IndexedEvent}
 */
public  final class IndexedEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dsr.event.IndexedEvent)
    IndexedEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IndexedEvent.newBuilder() to construct.
  private IndexedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IndexedEvent() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new IndexedEvent();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IndexedEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EventId.Builder subBuilder = null;
            if (eventId_ != null) {
              subBuilder = eventId_.toBuilder();
            }
            eventId_ = input.readMessage(EventId.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(eventId_);
              eventId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            EventInfo.Builder subBuilder = null;
            if (eventInfo_ != null) {
              subBuilder = eventInfo_.toBuilder();
            }
            eventInfo_ = input.readMessage(EventInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(eventInfo_);
              eventInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Event.internal_static_dsr_event_IndexedEvent_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Event.internal_static_dsr_event_IndexedEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            IndexedEvent.class, Builder.class);
  }

  public static final int EVENTID_FIELD_NUMBER = 1;
  private EventId eventId_;
  /**
   * <code>.dsr.event.EventId eventId = 1;</code>
   */
  public boolean hasEventId() {
    return eventId_ != null;
  }
  /**
   * <code>.dsr.event.EventId eventId = 1;</code>
   */
  public EventId getEventId() {
    return eventId_ == null ? EventId.getDefaultInstance() : eventId_;
  }
  /**
   * <code>.dsr.event.EventId eventId = 1;</code>
   */
  public EventIdOrBuilder getEventIdOrBuilder() {
    return getEventId();
  }

  public static final int EVENTINFO_FIELD_NUMBER = 2;
  private EventInfo eventInfo_;
  /**
   * <code>.dsr.event.EventInfo eventInfo = 2;</code>
   */
  public boolean hasEventInfo() {
    return eventInfo_ != null;
  }
  /**
   * <code>.dsr.event.EventInfo eventInfo = 2;</code>
   */
  public EventInfo getEventInfo() {
    return eventInfo_ == null ? EventInfo.getDefaultInstance() : eventInfo_;
  }
  /**
   * <code>.dsr.event.EventInfo eventInfo = 2;</code>
   */
  public EventInfoOrBuilder getEventInfoOrBuilder() {
    return getEventInfo();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (eventId_ != null) {
      output.writeMessage(1, getEventId());
    }
    if (eventInfo_ != null) {
      output.writeMessage(2, getEventInfo());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (eventId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEventId());
    }
    if (eventInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getEventInfo());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof IndexedEvent)) {
      return super.equals(obj);
    }
    IndexedEvent other = (IndexedEvent) obj;

    if (hasEventId() != other.hasEventId()) return false;
    if (hasEventId()) {
      if (!getEventId()
          .equals(other.getEventId())) return false;
    }
    if (hasEventInfo() != other.hasEventInfo()) return false;
    if (hasEventInfo()) {
      if (!getEventInfo()
          .equals(other.getEventInfo())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEventId()) {
      hash = (37 * hash) + EVENTID_FIELD_NUMBER;
      hash = (53 * hash) + getEventId().hashCode();
    }
    if (hasEventInfo()) {
      hash = (37 * hash) + EVENTINFO_FIELD_NUMBER;
      hash = (53 * hash) + getEventInfo().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static IndexedEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IndexedEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IndexedEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IndexedEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IndexedEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IndexedEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IndexedEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static IndexedEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static IndexedEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static IndexedEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static IndexedEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static IndexedEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(IndexedEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dsr.event.IndexedEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dsr.event.IndexedEvent)
      IndexedEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Event.internal_static_dsr_event_IndexedEvent_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Event.internal_static_dsr_event_IndexedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IndexedEvent.class, Builder.class);
    }

    // Construct using dk.dsrhorsens.volunteers.proto.event.IndexedEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (eventIdBuilder_ == null) {
        eventId_ = null;
      } else {
        eventId_ = null;
        eventIdBuilder_ = null;
      }
      if (eventInfoBuilder_ == null) {
        eventInfo_ = null;
      } else {
        eventInfo_ = null;
        eventInfoBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Event.internal_static_dsr_event_IndexedEvent_descriptor;
    }

    @Override
    public IndexedEvent getDefaultInstanceForType() {
      return IndexedEvent.getDefaultInstance();
    }

    @Override
    public IndexedEvent build() {
      IndexedEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public IndexedEvent buildPartial() {
      IndexedEvent result = new IndexedEvent(this);
      if (eventIdBuilder_ == null) {
        result.eventId_ = eventId_;
      } else {
        result.eventId_ = eventIdBuilder_.build();
      }
      if (eventInfoBuilder_ == null) {
        result.eventInfo_ = eventInfo_;
      } else {
        result.eventInfo_ = eventInfoBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof IndexedEvent) {
        return mergeFrom((IndexedEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(IndexedEvent other) {
      if (other == IndexedEvent.getDefaultInstance()) return this;
      if (other.hasEventId()) {
        mergeEventId(other.getEventId());
      }
      if (other.hasEventInfo()) {
        mergeEventInfo(other.getEventInfo());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      IndexedEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (IndexedEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private EventId eventId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EventId, EventId.Builder, EventIdOrBuilder> eventIdBuilder_;
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public boolean hasEventId() {
      return eventIdBuilder_ != null || eventId_ != null;
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public EventId getEventId() {
      if (eventIdBuilder_ == null) {
        return eventId_ == null ? EventId.getDefaultInstance() : eventId_;
      } else {
        return eventIdBuilder_.getMessage();
      }
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public Builder setEventId(EventId value) {
      if (eventIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        eventId_ = value;
        onChanged();
      } else {
        eventIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public Builder setEventId(
        EventId.Builder builderForValue) {
      if (eventIdBuilder_ == null) {
        eventId_ = builderForValue.build();
        onChanged();
      } else {
        eventIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public Builder mergeEventId(EventId value) {
      if (eventIdBuilder_ == null) {
        if (eventId_ != null) {
          eventId_ =
            EventId.newBuilder(eventId_).mergeFrom(value).buildPartial();
        } else {
          eventId_ = value;
        }
        onChanged();
      } else {
        eventIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public Builder clearEventId() {
      if (eventIdBuilder_ == null) {
        eventId_ = null;
        onChanged();
      } else {
        eventId_ = null;
        eventIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public EventId.Builder getEventIdBuilder() {
      
      onChanged();
      return getEventIdFieldBuilder().getBuilder();
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    public EventIdOrBuilder getEventIdOrBuilder() {
      if (eventIdBuilder_ != null) {
        return eventIdBuilder_.getMessageOrBuilder();
      } else {
        return eventId_ == null ?
            EventId.getDefaultInstance() : eventId_;
      }
    }
    /**
     * <code>.dsr.event.EventId eventId = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EventId, EventId.Builder, EventIdOrBuilder>
        getEventIdFieldBuilder() {
      if (eventIdBuilder_ == null) {
        eventIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EventId, EventId.Builder, EventIdOrBuilder>(
                getEventId(),
                getParentForChildren(),
                isClean());
        eventId_ = null;
      }
      return eventIdBuilder_;
    }

    private EventInfo eventInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EventInfo, EventInfo.Builder, EventInfoOrBuilder> eventInfoBuilder_;
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public boolean hasEventInfo() {
      return eventInfoBuilder_ != null || eventInfo_ != null;
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public EventInfo getEventInfo() {
      if (eventInfoBuilder_ == null) {
        return eventInfo_ == null ? EventInfo.getDefaultInstance() : eventInfo_;
      } else {
        return eventInfoBuilder_.getMessage();
      }
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public Builder setEventInfo(EventInfo value) {
      if (eventInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        eventInfo_ = value;
        onChanged();
      } else {
        eventInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public Builder setEventInfo(
        EventInfo.Builder builderForValue) {
      if (eventInfoBuilder_ == null) {
        eventInfo_ = builderForValue.build();
        onChanged();
      } else {
        eventInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public Builder mergeEventInfo(EventInfo value) {
      if (eventInfoBuilder_ == null) {
        if (eventInfo_ != null) {
          eventInfo_ =
            EventInfo.newBuilder(eventInfo_).mergeFrom(value).buildPartial();
        } else {
          eventInfo_ = value;
        }
        onChanged();
      } else {
        eventInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public Builder clearEventInfo() {
      if (eventInfoBuilder_ == null) {
        eventInfo_ = null;
        onChanged();
      } else {
        eventInfo_ = null;
        eventInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public EventInfo.Builder getEventInfoBuilder() {
      
      onChanged();
      return getEventInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    public EventInfoOrBuilder getEventInfoOrBuilder() {
      if (eventInfoBuilder_ != null) {
        return eventInfoBuilder_.getMessageOrBuilder();
      } else {
        return eventInfo_ == null ?
            EventInfo.getDefaultInstance() : eventInfo_;
      }
    }
    /**
     * <code>.dsr.event.EventInfo eventInfo = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EventInfo, EventInfo.Builder, EventInfoOrBuilder>
        getEventInfoFieldBuilder() {
      if (eventInfoBuilder_ == null) {
        eventInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EventInfo, EventInfo.Builder, EventInfoOrBuilder>(
                getEventInfo(),
                getParentForChildren(),
                isClean());
        eventInfo_ = null;
      }
      return eventInfoBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dsr.event.IndexedEvent)
  }

  // @@protoc_insertion_point(class_scope:dsr.event.IndexedEvent)
  private static final IndexedEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new IndexedEvent();
  }

  public static IndexedEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IndexedEvent>
      PARSER = new com.google.protobuf.AbstractParser<IndexedEvent>() {
    @Override
    public IndexedEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IndexedEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IndexedEvent> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<IndexedEvent> getParserForType() {
    return PARSER;
  }

  @Override
  public IndexedEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

